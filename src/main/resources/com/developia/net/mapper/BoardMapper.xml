<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.developia.net.mapper.BoardMapper">

<select id="getGroupList" resultType="com.developia.net.domain.GroupVO">
	SELECT LPAD(' ',2*(LEVEL - 1)) || GROUP_NM AS GROUP_NM, GROUP_CODE, GROUP_PCODE, LEVEL
	FROM NS_GROUP
	WHERE LEVEL = 1
	START WITH GROUP_PCODE = 0
	CONNECT BY PRIOR GROUP_CODE = GROUP_PCODE
</select>

<select id="getSecondLevel" resultType="map">
	SELECT GROUP_NM, GROUP_CODE, GROUP_PCODE, LEVEL
	FROM NS_GROUP
	WHERE LEVEL = 2
	START WITH GROUP_PCODE = 0
	CONNECT BY PRIOR GROUP_CODE = GROUP_PCODE
</select>

<select id="getThirdLevel" resultType="map">
	SELECT GROUP_NM, GROUP_CODE, GROUP_PCODE, LEVEL
	FROM NS_GROUP
	WHERE LEVEL = 3 AND GROUP_PCODE = #{pCode}
	START WITH GROUP_PCODE = 0
	CONNECT BY PRIOR GROUP_CODE = GROUP_PCODE
</select>

<select id="getLastLevel" resultType="map">
	SELECT GROUP_NM, GROUP_CODE, GROUP_PCODE, LEVEL
	FROM NS_GROUP
	WHERE LEVEL = 4 AND GROUP_PCODE = #{lastLevel}
	START WITH GROUP_PCODE = 0
	CONNECT BY PRIOR GROUP_CODE = GROUP_PCODE
</select>


<select id="getMember" resultType="map">
	SELECT B.GROUP_CODE, B.USER_NUM, B.USER_NM, B.USER_OFFICE, B.USER_MOBILE, B.USER_EMAIL, B.TITLE_NM, B.GRADE_NM, GROUP_NM FROM
	(	
		SELECT GROUP_CODE, USER_NM, USER_NUM, USER_OFFICE, USER_MOBILE, USER_EMAIL, TITLE_NM, GRADE_NM FROM
		(
			SELECT GROUP_CODE, USER_NM, USER_NUM, USER_OFFICE, USER_MOBILE, USER_EMAIL, USER_TITLE, GRADE_NM
			FROM NS_USER NU
			JOIN NS_USER_GRADE NUG
			ON NU.GRADE_CODE = NUG.GRADE_CODE
		) A 
		LEFT OUTER JOIN NS_USER_TITLE NUT
		ON A.USER_TITLE = NUT.TITLE_CODE
	) B
	JOIN NS_GROUP NG
	ON B.GROUP_CODE = NG.GROUP_CODE
	WHERE B.GROUP_CODE = #{memberCode}
</select>

<select id="getUserDetail" resultType="map">
	SELECT B.USER_ID, B.GROUP_CODE, B.USER_NUM, B.USER_NM, B.USER_OFFICE, B.USER_MOBILE, B.USER_EMAIL, B.TITLE_NM, B.GRADE_NM, GROUP_NM FROM
	(	
		SELECT USER_ID, GROUP_CODE, USER_NUM, USER_NM, USER_OFFICE, USER_MOBILE, USER_EMAIL, TITLE_NM, GRADE_NM FROM
		(
			SELECT USER_ID, GROUP_CODE, USER_NUM, USER_NM, USER_OFFICE, USER_MOBILE, USER_EMAIL, USER_TITLE, GRADE_NM
			FROM NS_USER NU
			JOIN NS_USER_GRADE NUG
			ON NU.GRADE_CODE = NUG.GRADE_CODE
		) A 
		LEFT OUTER JOIN NS_USER_TITLE NUT
		ON A.USER_TITLE = NUT.TITLE_CODE
	) B
	JOIN NS_GROUP NG
	ON B.GROUP_CODE = NG.GROUP_CODE
	WHERE B.USER_NM = #{user_nm}
</select>

<select id="autoComplete" parameterType="map" resultType="map">
	SELECT DISTINCT GROUP_NM FROM NS_GROUP
	WHERE GROUP_NM LIKE '%'||#{value}||'%'
</select>

<update id ="upDate" parameterType="com.developia.net.domain.UserVO">
	UPDATE NS_USER SET USER_NM = #{user_nm} WHERE USER_ID = #{user_id}
</update>

 <update id ="updateUserGroup" parameterType="com.developia.net.domain.UserVO">
	UPDATE NS_USER SET GROUP_NM = #{new_group}, group_code = #{gCode} where user_id = #{user_id}
</update>

<select id = "getGroupCode" resultType="int">
	SELECT GROUP_CODE FROM NS_GROUP WHERE GROUP_NM = #{new_group}
</select>

<select id="getSecondLevelGroup" resultType="map">
	SELECT * FROM NS_GROUP WHERE GROUP_PCODE = #{lv2Pcode}
</select>

<select id="getThirdLevelGroup" resultType="map">
	SELECT * FROM NS_GROUP WHERE GROUP_PCODE = #{lv3Pcode}
</select>

<select id="getLastLevelGroup" resultType="map">
	SELECT * FROM NS_GROUP WHERE GROUP_PCODE = #{lvlast}
</select>

<select id="makeGroupCode" resultType="int">
	SELECT NVL(MAX(GROUP_CODE||COUNT(1)), 0)
	FROM
		(
			SELECT * FROM NS_GROUP 
			WHERE GROUP_PCODE = #{level_3_code}
			ORDER BY GROUP_CODE DESC
		) A
	WHERE ROWNUM = 1
	GROUP BY GROUP_CODE
</select>

<insert id = "makeGroup_1">
INSERT INTO NS_GROUP
	VALUES
		(
			SEQ_GROUP.NEXTVAL,
			10010,
			#{nextGroupCode},
			#{level_3_code},
			#{groupName}
		)
</insert>

<select id="groupCheck" resultType="int">
	SELECT NVL(GROUP_COUNT, 0) FROM
(
    SELECT COUNT(GROUP_CODE) AS GROUP_COUNT FROM
    (
        SELECT * FROM NS_GROUP WHERE GROUP_PCODE = #{level_3_code}
        ORDER BY GROUP_CODE DESC
    ) 
    A WHERE ROWNUM = 1
) B
</select>

<select id="bigGroupCheck" resultType="int">
	SELECT NVL(GROUP_COUNT, 0) FROM
(
    SELECT COUNT(GROUP_CODE) AS GROUP_COUNT FROM
    (
        SELECT * FROM NS_GROUP WHERE GROUP_PCODE = #{level_2_code}
        ORDER BY GROUP_CODE DESC
    ) 
    A WHERE ROWNUM = 1
) B
</select>

<select id="getnewPartNum" resultType="int">
	SELECT GROUP_CODE
	FROM
		(
			SELECT * FROM NS_GROUP 
			WHERE GROUP_PCODE = #{group_cd}
			ORDER BY GROUP_CODE DESC
		) A
	WHERE ROWNUM = 1
	GROUP BY GROUP_CODE
</select>

<insert id = "makeNewPart">
INSERT INTO NS_GROUP
	VALUES
		(
			SEQ_GROUP.NEXTVAL,
			10010,
			#{newPartNum},
			#{level_3_code},
			#{groupNewName}
		)
</insert>

<select id="getGroupOneMember" resultType="map">
	SELECT * FROM NS_USER WHERE GROUP_CODE = #{groupOneCode}
</select>

 <update id ="updateGroupMember" parameterType="com.developia.net.domain.UserVO">
	UPDATE NS_USER SET GROUP_NM = #{groupNewName}, GROUP_CODE = #{newPartNum} where GROUP_CODE = #{target}
</update>

<delete id="deleteGroup">
	DELETE FROM NS_GROUP WHERE GROUP_CODE = #{group_code}
</delete>

<update id="updateGroupName" parameterType="com.developia.net.domain.UserVO">
	UPDATE NS_USER SET GROUP_NM = #{new_name} where GROUP_NM = #{target}
</update>

<update id="updateTeamName" parameterType="com.developia.net.domain.GroupVO">
	UPDATE NS_GROUP SET GROUP_NM = #{new_name} where GROUP_CODE = #{level_3_code}
</update>

<select id="deleteCheckLv3" resultType="string">
	SELECT GROUP_NM FROM NS_GROUP WHERE GROUP_CODE = #{level_3_code}
</select>

<insert id="upDateUserTable">
	<selectKey keyProperty="update_seq" order="BEFORE" resultType="int">
        SELECT SEQ_UPDATE.nextval from dual
    </selectKey>
	INSERT INTO NS_USER_UPDATE
		VALUES
			(
			#{update_seq},
			TO_DATE(SYSDATE,'yyyy.mm.dd'),
			#{content},
			#{userName}
			)
</insert>

<select id="getUpdateList" resultType="com.developia.net.domain.UpdateVO">
	SELECT * FROM (
		SELECT * FROM NS_USER_UPDATE
		ORDER BY UPDATE_SEQ DESC
		) WHERE ROWNUM <![CDATA[<=]]> 8
</select>

<select id="getAllUserList" resultType="com.developia.net.domain.UserVO">
	SELECT USER_NM, USER_NUM, NUS.GRADE_NM, GROUP_NM, USER_EMAIL, USER_OFFICE, USER_MOBILE 
	FROM NS_USER NU
	INNER JOIN NS_USER_GRADE NUS
	ON NU.GRADE_CODE = NUS.GRADE_CODE
	WHERE GRADE_NM = '국장' OR GRADE_NM = '부국장' OR GRADE_NM = '부장'
</select>

<select id="getSearchList" resultType="map">
	SELECT USER_NM, USER_NUM, NUS.GRADE_NM, GROUP_NM, USER_EMAIL, USER_OFFICE, USER_MOBILE 
	FROM NS_USER NU
	INNER JOIN NS_USER_GRADE NUS
	ON NU.GRADE_CODE = NUS.GRADE_CODE
	<bind name="options" value="option"/>
	<if test="options == 1">
	WHERE USER_NM LIKE '%'||#{keyword}||'%'
	</if>
	<if test="options == 10">
	WHERE USER_NUM LIKE '%'||#{keyword}||'%'
	</if>
	<if test="options == 25">
	WHERE GROUP_NM LIKE '%'||#{keyword}||'%'
	</if>
</select>

<select id="nameAutoComplete" parameterType="map" resultType="map">
	SELECT
	<bind name="options" value ="option"/>
	<if test="options == 1">
	DISTINCT USER_NM
	FROM NS_USER
	WHERE USER_NM LIKE '%'||#{value}||'%'
	</if>
</select>

<select id="getGroupName" resultType="string">
	SELECT GROUP_NM FROM NS_GROUP WHERE GROUP_CODE = #{groupOneCode}
</select>

<delete id="userDelete">
	DELETE FROM NS_USER WHERE USER_ID = #{user_id}
</delete>

<select id="getUserNameID" resultType="string">
	SELECT USER_NM FROM NS_USER WHERE USER_ID = #{user_id}
</select>
</mapper>